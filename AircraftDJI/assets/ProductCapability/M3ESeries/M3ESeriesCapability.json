{
  "supportedMSDKVersion": "5.2.0",
  "productType": "M3_ENTERPRISE_SERIES",
  "supportedMinFirmwareVersion": "00.02.0306",
  "airLink": [
    {
      "productType": "M3E_SERIES_AIRLINK",
      "capabilityFile": "M3ESeries/M3ESeriesAirLinkCapability.json"
    }
  ],
  "camera": [
    {
      "productType": "M3E",
      "supportedComponentIndexType": [
        "LEFT_OR_MAIN"
      ],
      "capabilityFile": "M3ESeries/M3ECameraCapability.json"
    },
    {
      "productType": "M3T",
      "supportedComponentIndexType": [
        "LEFT_OR_MAIN"
      ],
      "capabilityFile": "M3ESeries/M3TCameraCapability.json"
    },
    {
      "productType": "M3M",
      "supportedComponentIndexType": [
        "LEFT_OR_MAIN"
      ],
      "capabilityFile": "M3ESeries/M3MCameraCapability.json"
    }
  ],
  "gimbal": [
    {
      "productType": "M3E_SERIES_GIMBAL",
      "supportedComponentIndexType": [
        "LEFT_OR_MAIN"
      ],
      "capabilityFile": "M3ESeries/M3ESeriesGimbalCapability.json"
    }
  ],
  "remoteController": [
    {
      "productType": "DJI_RC_PRO",
      "capabilityFile": "RemoteController/DJIRCProCapability.json"
    }
  ],
  "flightController": [
    {
      "productType": "M3E_SERIES_FC",
      "capabilityFile": "M3ESeries/M3ESeriesFlightControllerCapability.json"
    }
  ],
  "battery": [
    {
      "productType": "M3E_SERIES_BATTERY",
      "capabilityFile": "M3ESeries/M3ESeriesBatteryCapability.json"
    }
  ],
  "userAccount": {
    "className": "UserAccountManager",
    "methodList": [
      {
        "methodName": "getLoginInfo"
      },
      {
        "methodName": "logInDJIUserAccount"
      },
      {
        "methodName": "logOutDJIUserAccount"
      },
      {
        "methodName": "addLoginInfoUpdateListener"
      },
      {
        "methodName": "removeLoginInfoUpdateListener"
      },
      {
        "methodName": "clearAllLoginInfoUpdateListener"
      }
    ]
  },
  "simulator": {
    "className": "SimulatorManager",
    "methodList": [
      {
        "methodName": "isSimulatorEnabled"
      },
      {
        "methodName": "enableSimulator"
      },
      {
        "methodName": "disableSimulator"
      },
      {
        "methodName": "addSimulatorStateListener"
      },
      {
        "methodName": "removeSimulatorStateListener"
      },
      {
        "methodName": "clearAllSimulatorStateListener"
      }
    ]
  },
  "mediaDataCenter": {
    "className": "MediaDataCenter",
    "methodList": [
      {
        "methodName": "getVideoStreamManager"
      },
      {
        "methodName": "getMediaManager"
      },
      {
        "methodName": "getLiveStreamManager"
      }
    ]
  },
  "videoStream": {
    "className": "VideoStreamManager",
    "methodList": [
      {
        "methodName": "getAvailableStreamSources"
      },
      {
        "methodName": "addStreamSourcesListener"
      },
      {
        "methodName": "removeStreamSourcesListener"
      },
      {
        "methodName": "clearAllStreamSourcesListeners"
      },
      {
        "methodName": "getAvailableVideoChannels"
      },
      {
        "methodName": "getAvailableVideoChannel"
      }
    ]
  },
  "media": {
    "className": "MediaManager",
    "methodList": [
      {
        "methodName": "enable"
      },
      {
        "methodName": "disable"
      },
      {
        "methodName": "addMediaFileListStateListener"
      },
      {
        "methodName": "removeMediaFileListStateListener"
      },
      {
        "methodName": "removeAllMediaFileListStateListener"
      },
      {
        "methodName": "getMediaFileListState"
      },
      {
        "methodName": "setMediaFileDataSource"
      },
      {
        "methodName": "pullMediaFileListFromCamera"
      },
      {
        "methodName": "getMediaFileListData"
      },
      {
        "methodName": "deleteMediaFiles"
      },
      {
        "methodName": "playVideo"
      },
      {
        "methodName": "seekVideo"
      },
      {
        "methodName": "pauseVideo"
      },
      {
        "methodName": "resumeVideo"
      },
      {
        "methodName": "stopVideo"
      },
      {
        "methodName": "addVideoPlayStateListener"
      },
      {
        "methodName": "removeVideoPlayStateListener"
      },
      {
        "methodName": "removeAllVideoPlayStateListener"
      }
    ]
  },
  "liveStream": {
    "className": "LiveStreamManager",
    "methodList": [
      {
        "methodName": "isStreaming"
      },
      {
        "methodName": "setLiveStreamSettings"
      },
      {
        "methodName": "getLiveStreamSettings"
      },
      {
        "methodName": "setVideoChannelType"
      },
      {
        "methodName": "getVideoChannelType"
      },
      {
        "methodName": "startStream"
      },
      {
        "methodName": "stopStream"
      },
      {
        "methodName": "setLiveStreamQuality"
      },
      {
        "methodName": "getLiveStreamQuality"
      },
      {
        "methodName": "setLiveVideoBitrateMode"
      },
      {
        "methodName": "getLiveVideoBitrateMode"
      },
      {
        "methodName": "setLiveVideoBitrate"
      },
      {
        "methodName": "getLiveVideoBitrate"
      },
      {
        "methodName": "addLiveStreamStatusListener"
      },
      {
        "methodName": "removeLiveStreamStatusListener"
      }
    ]
  },
  "waypointMission": {
    "className": "WaypointMissionManager",
    "methodList": [
      {
        "methodName": "addWaypointMissionExecuteStateListener"
      },
      {
        "methodName": "removeWaypointMissionExecuteStateListener"
      },
      {
        "methodName": "clearAllWaypointMissionExecuteStateListener"
      },
      {
        "methodName": "addWaylineExecutingInfoListener"
      },
      {
        "methodName": "removeWaylineExecutingInfoListener"
      },
      {
        "methodName": "clearAllWaylineExecutingInfoListener"
      },
      {
        "methodName": "pushKMZFileToAircraft"
      },
      {
        "methodName": "startMission"
      },
      {
        "methodName": "getAvailableWaylineIDs"
      },
      {
        "methodName": "pauseMission"
      },
      {
        "methodName": "resumeMission"
      },
      {
        "methodName": "stopMission"
      }
    ]
  },
  "virtualStick": {
    "className": "VirtualStickManager",
    "methodList": [
      {
        "methodName": "enableVirtualStick"
      },
      {
        "methodName": "disableVirtualStick"
      },
      {
        "methodName": "getLeftStick"
      },
      {
        "methodName": "getRightStick"
      },
      {
        "methodName": "setVirtualStickAdvancedModeEnabled"
      },
      {
        "methodName": "sendVirtualStickAdvancedParam"
      },
      {
        "methodName": "setVirtualStickStateListener"
      },
      {
        "methodName": "removeVirtualStickStateListener"
      },
      {
        "methodName": "clearAllVirtualStickStateListener"
      }
    ]
  },
  "perception": {
    "className": "PerceptionManager",
    "methodList": [
      {
        "methodName": "setOverallObstacleAvoidanceEnabled"
      },
      {
        "methodName": "getOverallObstacleAvoidanceEnabled"
      },
      {
        "methodName": "setObstacleAvoidanceEnabled"
      },
      {
        "methodName": "getObstacleAvoidanceEnabled"
      },
      {
        "methodName": "setObstacleAvoidanceType"
      },
      {
        "methodName": "getObstacleAvoidanceType"
      },
      {
        "methodName": "setObstacleAvoidanceWarningDistance"
      },
      {
        "methodName": "getObstacleAvoidanceWarningDistance"
      },
      {
        "methodName": "setObstacleAvoidanceBrakingDistance"
      },
      {
        "methodName": "getObstacleAvoidanceBrakingDistance"
      },
      {
        "methodName": "setVisionPositioningEnabled"
      },
      {
        "methodName": "getVisionPositioningEnabled"
      },
      {
        "methodName": "setPrecisionLandingEnabled"
      },
      {
        "methodName": "getPrecisionLandingEnabled"
      },
      {
        "methodName": "addPerceptionInformationListener"
      },
      {
        "methodName": "removePerceptionInformationListener"
      },
      {
        "methodName": "clearAllPerceptionInformationListener"
      },
      {
        "methodName": "addObstacleDataListener"
      },
      {
        "methodName": "removeObstacleDataListener"
      },
      {
        "methodName": "clearAllObstacleDataListener"
      },
      {
        "methodName": "getRadarManager"
      }
    ]
  },
  "radar": {
    "className": "RadarManager",
    "methodList": [
      {
        "methodName": "setObstacleAvoidanceEnabled"
      },
      {
        "methodName": "getObstacleAvoidanceEnabled"
      },
      {
        "methodName": "addRadarInformationListener"
      },
      {
        "methodName": "removeRadarInformationListener"
      },
      {
        "methodName": "clearAllRadarInformationListener"
      },
      {
        "methodName": "addObstacleDataListener"
      },
      {
        "methodName": "removeObstacleDataListener"
      },
      {
        "methodName": "clearAllObstacleDataListener"
      }
    ]
  },
  "RTKCenter": {
    "className": "RTKCenter",
    "methodList": [
      {
        "methodName": "getQXRTKManager"
      },
      {
        "methodName": "getCMCCRTKManager"
      },
      {
        "methodName": "getCustomRTKManager"
      },
      {
        "methodName": "getRTKStationManager"
      },
      {
        "methodName": "setAircraftRTKModuleEnabled"
      },
      {
        "methodName": "getAircraftRTKModuleEnabled"
      },
      {
        "methodName": "setRTKReferenceStationSource"
      },
      {
        "methodName": "getRTKReferenceStationSource"
      },
      {
        "methodName": "setRTKMaintainAccuracyEnabled"
      },
      {
        "methodName": "getRTKMaintainAccuracyEnabled"
      },
      {
        "methodName": "addRTKLocationInfoListener"
      },
      {
        "methodName": "removeRTKLocationInfoListener"
      },
      {
        "methodName": "clearAllRTKLocationInfoListener"
      },
      {
        "methodName": "addRTKSystemStateListener"
      },
      {
        "methodName": "removeRTKSystemStateListener"
      },
      {
        "methodName": "clearAllRTKSystemStateListener"
      }
    ]
  },
  "networkRTK": {
    "className": "NetworkRTKManager",
    "methodList": [
      {
        "methodName": "setCustomNetworkRTKSettings"
      },
      {
        "methodName": "getCustomNetworkRTKSettings"
      },
      {
        "methodName": "startNetworkRTKService"
      },
      {
        "methodName": "stopNetworkRTKService"
      },
      {
        "methodName": "getNetworkRTKCoordinateSystem"
      },
      {
        "methodName": "addNetworkRTKServiceInfoListener"
      },
      {
        "methodName": "removeNetworkRTKServiceInfoListener"
      },
      {
        "methodName": "clearAllNetworkRTKServiceInfoListener"
      }
    ]
  },
  "RTKStation": {
    "className": "RTKStationManager",
    "methodList": [
      {
        "methodName": "startSearchRTKStation"
      },
      {
        "methodName": "stopSearchRTKStation"
      },
      {
        "methodName": "startConnectToRTKStation"
      },
      {
        "methodName": "addSearchRTKStationListener"
      },
      {
        "methodName": "removeSearchRTKStationListener"
      },
      {
        "methodName": "clearAllSearchRTKStationListener"
      },
      {
        "methodName": "addRTKStationConnectStatusListener"
      },
      {
        "methodName": "removeRTKStationConnectStatusListener"
      },
      {
        "methodName": "clearAllRTKStationConnectStatusListener"
      },
      {
        "methodName": "addConnectedRTKStationInfoListener"
      },
      {
        "methodName": "removeConnectedRTKStationInfoListener"
      },
      {
        "methodName": "clearAllConnectedRTKStationInfoListener"
      },
      {
        "methodName": "loginRTKStation"
      },
      {
        "methodName": "setRTKStationReferencePosition"
      },
      {
        "methodName": "getRTKStationReferencePosition"
      },
      {
        "methodName": "resetRTKStationReferencingPosition"
      },
      {
        "methodName": "resetRTKStationPassword"
      },
      {
        "methodName": "setRTKStationName"
      }
    ]
  },
  "flyZone": {
    "className": "FlyZoneManager",
    "methodList": [
      {
        "methodName": "addFlySafeNotificationListener"
      },
      {
        "methodName": "removeFlySafeNotificationListener"
      },
      {
        "methodName": "clearAllFlySafeNotificationListener"
      },
      {
        "methodName": "getFlyZonesInSurroundingArea"
      },
      {
        "methodName": "unlockAllEnhancedWarningFlyZone"
      },
      {
        "methodName": "unlockAuthorizationFlyZone"
      },
      {
        "methodName": "downloadFlyZoneLicensesFromServer"
      },
      {
        "methodName": "getFlyZonesByAreaID"
      },
      {
        "methodName": "pushFlyZoneLicensesToAircraft"
      },
      {
        "methodName": "pullFlyZoneLicensesFromAircraft"
      },
      {
        "methodName": "deleteFlyZoneLicensesFromAircraft"
      },
      {
        "methodName": "setFlyZoneLicensesEnabled"
      }
    ]
  },
  "LTE": {
    "className": "LTEManager",
    "methodList": [
      {
        "methodName": "addLTEAuthenticationInfoListener"
      },
      {
        "methodName": "removeLTEAuthenticationInfoListener"
      },
      {
        "methodName": "clearAllLTEAuthenticationInfoListener"
      },
      {
        "methodName": "updateLTEAuthenticationInfo"
      },
      {
        "methodName": "getLTEAuthenticationVerificationCode"
      },
      {
        "methodName": "startLTEAuthentication"
      },
      {
        "methodName": "getLTEEnhancedTransmissionType"
      },
      {
        "methodName": "setLTEEnhancedTransmissionType"
      },
      {
        "methodName": "addLTELinkInfoListener"
      },
      {
        "methodName": "removeLTELinkInfoListener"
      },
      {
        "methodName": "clearAllLTELinkInfoListener"
      },
      {
        "methodName": "addLTEDongleInfoListener"
      },
      {
        "methodName": "removeLTEDongleInfoListener"
      },
      {
        "methodName": "clearAllLTEDongleInfoListener"
      }
    ]
  },
  "PayloadCenter": {
    "className": "PayloadCenter",
    "methodList": [
      {
        "methodName": "getPayloadManager"
      }
    ]
  },
  "PayloadManager": {
    "className": "PayloadManager",
    "methodList": [
      {
        "methodName": "addPayloadBasicInfoListener"
      },
      {
        "methodName": "removePayloadBasicInfoListener"
      },
      {
        "methodName": "clearAllPayloadBasicInfoListener"
      },
      {
        "methodName": "addPayloadWidgetInfoListener"
      },
      {
        "methodName": "removePayloadWidgetInfoListener"
      },
      {
        "methodName": "clearAllPayloadWidgetInfoListener"
      },
      {
        "methodName": "addPayloadDataListener"
      },
      {
        "methodName": "removePayloadDataListener"
      },
      {
        "methodName": "clearAllPayloadDataListener"
      },
      {
        "methodName": "pullWidgetInfoFromPayload"
      },
      {
        "methodName": "setWidgetValue"
      },
      {
        "methodName": "sendDataToPayload"
      }
    ]
  },
  "megaphone": {
    "className": "MegaphoneManager",
    "methodList": [
      {
        "methodName": "setVolume"
      },
      {
        "methodName": "getVolume"
      },
      {
        "methodName": "setPlayMode"
      },
      {
        "methodName": "getPlayMode"
      },
      {
        "methodName": "setWorkMode"
      },
      {
        "methodName": "getWorkMode"
      },
      {
        "methodName": "getStatus"
      },
      {
        "methodName": "startPlay"
      },
      {
        "methodName": "stopPlay"
      },
      {
        "methodName": "startPushingFileToMegaphone"
      },
      {
        "methodName": "cancelPushingFileToMegaphone"
      },
      {
        "methodName": "startRealTimeTransmission"
      },
      {
        "methodName": "sendRealTimeDataToMegaphone"
      },
      {
        "methodName": "appendEOFToRealTimeData"
      },
      {
        "methodName": "cancelRealTimeTransmission"
      },
      {
        "methodName": "addRealTimeTransmissionStateListener"
      },
      {
        "methodName": "removeRealTimeTransimissionStateListener"
      },
      {
        "methodName": "clearAllRealTimeTransimissionStateListener"
      }
    ]
  },
  "upgrade": {
    "className": "UpgradeManager",
    "methodList": [
      {
        "methodName": "addUpgradeableComponentListener"
      },
      {
        "methodName": "removeUpgradeableComponentListener"
      },
      {
        "methodName": "removeAllUpgradeComponentChangeListener"
      },
      {
        "methodName": "getUpgradeableComponents"
      },
      {
        "methodName": "checkUpgradeableComponents"
      },
      {
        "methodName": "startOfflineUpgrade"
      },
      {
        "methodName": "addUpgradeInfoListener"
      },
      {
        "methodName": "removeUpgradeInfoListener"
      },
      {
        "methodName": "removeAllUpgradeInfoListener"
      }
    ]
  },


  "flightLog": {
    "className": "FlightLogManager",
    "methodList": [
      {
        "methodName": "getFlightRecordPath"
      },
      {
        "methodName": "getFlyClogPath"
      }
    ]
  },
  "areaCode": {
    "className": "AreaCodeManager",
    "methodList": [
      {
        "methodName": "getAreaCode"
      },
      {
        "methodName": "addAreaCodeChangeListener"
      },
      {
        "methodName": "removeAreaCodeChangeListener"
      },
      {
        "methodName": "clearAllListeners"
      }
    ]
  },
  "UASRemoteID": {
    "className": "UASRemoteIDManager",
    "methodList": [
      {
        "methodName": "setAreaCode"
      },
      {
        "methodName": "getUASRemoteIDStatus"
      },
      {
        "methodName": "addUASRemoteIDStatusListener"
      },
      {
        "methodName": "removeUASRemoteIDStatusListener"
      },
      {
        "methodName": "clearUASRemoteIDStatusListener"
      },
      {
        "methodName": "setElectronicIDEnabled"
      },
      {
        "methodName": "getElectronicIDEnabled"
      },
      {
        "methodName": "addElectronicIDStatusListener"
      },
      {
        "methodName": "removeElectronicIDStatusListener"
      },
      {
        "methodName": "clearAllElectronicIDStatusListener"
      },
      {
        "methodName": "setUARegistrationNumber"
      },
      {
        "methodName": "getUARegistrationNumber"
      },
      {
        "methodName": "addUARegistrationNumberStatusListener"
      },
      {
        "methodName": "removeUARegistrationNumberStatusListener"
      },
      {
        "methodName": "clearAllUARegistrationNumberStatusListener"
      }
    ]
  },
  "LDM": {
    "className": "ILDMManager",
    "methodList": [
      {
        "methodName": "isLDMLicenseLoaded"
      },
      {
        "methodName": "isLDMEnabled"
      },
      {
        "methodName": "isNetworkServiceEnabledForModule"
      },
      {
        "methodName": "loadLocalLDMLicenseContent"
      },
      {
        "methodName": "getLocalLDMLicensePath"
      },
      {
        "methodName": "isLDMEnabled"
      },
      {
        "methodName": "enableLDM"
      },
      {
        "methodName": "disableLDM"
      }
    ]
  },
  "deviceStatus": {
    "className": "DeviceStatusManager",
    "methodList": [
      {
        "methodName": "addDJIDeviceStatusChangeListener"
      },
      {
        "methodName": "removeDJIDeviceStatusChangeListener"
      },
      {
        "methodName": "clearAllListeners"
      },
      {
        "methodName": "getCurrentDJIDeviceStatus"
      }
    ]
  },
  "deviceHealth": {
    "className": "DeviceHealthManager",
    "methodList": [
      {
        "methodName": "addDJIDeviceHealthInfoChangeListener"
      },
      {
        "methodName": "removeDJIDeviceHealthInfoChangeListener"
      },
      {
        "methodName": "clearAllListeners"
      },
      {
        "methodName": "getCurrentDJIDeviceHealthInfos"
      }
    ]
  }
}
